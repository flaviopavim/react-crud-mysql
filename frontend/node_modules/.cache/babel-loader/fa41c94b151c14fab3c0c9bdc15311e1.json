{"ast":null,"code":"'use strict';\n\nvar pkg = require('./../../package.json');\n\nvar validators = {}; // eslint-disable-next-line func-names\n\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\nvar deprecatedWarnings = {};\nvar currentVerArr = pkg.version.split('.');\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\n\nfunction isOlderVersion(version, thanVersion) {\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\n  var destVer = version.split('.');\n\n  for (var i = 0; i < 3; i++) {\n    if (pkgVersionArr[i] > destVer[i]) {\n      return true;\n    } else if (pkgVersionArr[i] < destVer[i]) {\n      return false;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\n\n\nvalidators.transitional = function transitional(validator, version, message) {\n  var isDeprecated = version && isOlderVersion(version);\n\n  function formatMessage(opt, desc) {\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  } // eslint-disable-next-line func-names\n\n\n  return function (value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\n    }\n\n    if (isDeprecated && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true; // eslint-disable-next-line no-console\n\n      console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\n\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n\n  var keys = Object.keys(options);\n  var i = keys.length;\n\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n\n      continue;\n    }\n\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  isOlderVersion: isOlderVersion,\n  assertOptions: assertOptions,\n  validators: validators\n};","map":{"version":3,"sources":["D:/Work/Testes/react-crud-test/frontend/node_modules/axios/lib/helpers/validator.js"],"names":["pkg","require","validators","forEach","type","i","validator","thing","deprecatedWarnings","currentVerArr","version","split","isOlderVersion","thanVersion","pkgVersionArr","destVer","transitional","message","isDeprecated","formatMessage","opt","desc","value","opts","Error","console","warn","assertOptions","options","schema","allowUnknown","TypeError","keys","Object","length","result","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nvar pkg = require('./../../package.json');\r\n\r\nvar validators = {};\r\n\r\n// eslint-disable-next-line func-names\r\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\r\n  validators[type] = function validator(thing) {\r\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\r\n  };\r\n});\r\n\r\nvar deprecatedWarnings = {};\r\nvar currentVerArr = pkg.version.split('.');\r\n\r\n/**\r\n * Compare package versions\r\n * @param {string} version\r\n * @param {string?} thanVersion\r\n * @returns {boolean}\r\n */\r\nfunction isOlderVersion(version, thanVersion) {\r\n  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;\r\n  var destVer = version.split('.');\r\n  for (var i = 0; i < 3; i++) {\r\n    if (pkgVersionArr[i] > destVer[i]) {\r\n      return true;\r\n    } else if (pkgVersionArr[i] < destVer[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Transitional option validator\r\n * @param {function|boolean?} validator\r\n * @param {string?} version\r\n * @param {string} message\r\n * @returns {function}\r\n */\r\nvalidators.transitional = function transitional(validator, version, message) {\r\n  var isDeprecated = version && isOlderVersion(version);\r\n\r\n  function formatMessage(opt, desc) {\r\n    return '[Axios v' + pkg.version + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\r\n  }\r\n\r\n  // eslint-disable-next-line func-names\r\n  return function(value, opt, opts) {\r\n    if (validator === false) {\r\n      throw new Error(formatMessage(opt, ' has been removed in ' + version));\r\n    }\r\n\r\n    if (isDeprecated && !deprecatedWarnings[opt]) {\r\n      deprecatedWarnings[opt] = true;\r\n      // eslint-disable-next-line no-console\r\n      console.warn(\r\n        formatMessage(\r\n          opt,\r\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\r\n        )\r\n      );\r\n    }\r\n\r\n    return validator ? validator(value, opt, opts) : true;\r\n  };\r\n};\r\n\r\n/**\r\n * Assert object's properties type\r\n * @param {object} options\r\n * @param {object} schema\r\n * @param {boolean?} allowUnknown\r\n */\r\n\r\nfunction assertOptions(options, schema, allowUnknown) {\r\n  if (typeof options !== 'object') {\r\n    throw new TypeError('options must be an object');\r\n  }\r\n  var keys = Object.keys(options);\r\n  var i = keys.length;\r\n  while (i-- > 0) {\r\n    var opt = keys[i];\r\n    var validator = schema[opt];\r\n    if (validator) {\r\n      var value = options[opt];\r\n      var result = value === undefined || validator(value, opt, options);\r\n      if (result !== true) {\r\n        throw new TypeError('option ' + opt + ' must be ' + result);\r\n      }\r\n      continue;\r\n    }\r\n    if (allowUnknown !== true) {\r\n      throw Error('Unknown option ' + opt);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  isOlderVersion: isOlderVersion,\r\n  assertOptions: assertOptions,\r\n  validators: validators\r\n};\r\n"]},"metadata":{},"sourceType":"script"}