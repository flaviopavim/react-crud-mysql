{"ast":null,"code":"export function formataDataBanco(data) {\n  //formata data de dd/mm/aaaa para aaaa-mm-dd pra enviar ao banco de dados\n  if (typeof data != 'undefined') return data.substring(6, 10) + '-' + data.substring(3, 5) + '-' + data.substring(0, 2);\n}\nexport function formataData(data) {\n  //formata data de aaaa-mm-dd para dd/mm/aaaa pra enviar ao banco de dados\n  //também faz validação se a data está correta e se não é maior que a data atual\n  if (data.length == 2) {\n    data = data + '/';\n  } else if (data.length == 5) {\n    data = data + '/';\n  }\n\n  if (data.length > 10) {\n    data = data.substring(0, 10);\n  }\n\n  if (data.length == 10) {\n    //se o dia for maior que 28, verifica se é bissexto\n    if (data.substring(0, 2) == 29) {\n      if (data.substring(3, 5) == '02') {\n        if (data.substring(6, 10) % 4 == 0) {\n          data = '29/02/' + data.substring(6, 10);\n        } else {\n          data = '28/02/' + data.substring(6, 10);\n        }\n      }\n    } //se o dia for maior que 31, verifica se o mês tem 31 dias\n\n\n    if (data.substring(0, 2) > 31) {\n      if (data.substring(3, 5) == '04' || data.substring(3, 5) == '06' || data.substring(3, 5) == '09' || data.substring(3, 5) == '11') {\n        data = '30/' + data.substring(3, 5) + '/' + data.substring(6, 10);\n      } else {\n        data = '31/' + data.substring(3, 5) + '/' + data.substring(6, 10);\n      }\n    } //se o mês for maior que 12, setar o mês para 12\n\n\n    if (data.substring(3, 5) > 12) {\n      data = data.substring(0, 2) + '/' + '12' + '/' + data.substring(6, 10);\n    } //se o ano for menor que 1900, setar o ano para 1900\n\n\n    if (data.length == 10 && Number(data.substring(6, 10)) < 1900) {\n      data = data.substring(0, 6) + '1900';\n    } //se o ano for maior que o atual\n\n\n    if (data.length == 10 && Number(data.substring(6, 10)) > new Date().getFullYear()) {\n      data = data.substring(0, 6) + new Date().getFullYear();\n    } //pegar timestamp da data\n\n\n    let timestamp = new Date(formataDataBanco(data)).getTime(); //pegar timestamp atual\n\n    let timestampAtual = new Date().getTime(); //verificar se a data é maior que a data atual\n\n    if (timestamp > timestampAtual) {\n      //dia atual\n      let diaAtual = new Date().getDate(); //adiciona zero a esquerda\n\n      if (diaAtual < 10) {\n        diaAtual = '0' + diaAtual;\n      } //mês atual\n\n\n      let mesAtual = new Date().getMonth() + 1; //adiciona zero a esquerda\n\n      if (mesAtual < 10) {\n        mesAtual = '0' + mesAtual;\n      } //ano atual\n\n\n      let anoAtual = new Date().getFullYear(); //formatar data atual\n\n      data = diaAtual + '/' + mesAtual + '/' + anoAtual;\n    }\n  }\n\n  return data;\n}\nexport function converterDataNascimento(data) {\n  data.forEach(element => {\n    if (element.datanascimento !== '0000-00-00') {\n      //formatar datanacimento em dd/mm/aaaa\n      console.log(element.datanascimento);\n      let dia = element.datanascimento.split('-')[2];\n      let mes = element.datanascimento.split('-')[1];\n      let ano = element.datanascimento.split('-')[0];\n      element.datanascimento = dia + '/' + mes + '/' + ano;\n      let dataNascimento = dia + '/' + mes + '/' + ano;\n      let dataAtual = new Date();\n      let dataNascimentoConvertida = new Date(dataNascimento);\n      let anos = dataAtual.getFullYear() - dataNascimentoConvertida.getFullYear();\n      element.idade = anos;\n    } else {\n      element.datanascimento = 'Desconhecido';\n      element.idade = 0;\n    }\n  });\n  return data;\n}","map":{"version":3,"sources":["D:/Work/Testes/new/frontend/src/Funcoes.js"],"names":["formataDataBanco","data","substring","formataData","length","Number","Date","getFullYear","timestamp","getTime","timestampAtual","diaAtual","getDate","mesAtual","getMonth","anoAtual","converterDataNascimento","forEach","element","datanascimento","console","log","dia","split","mes","ano","dataNascimento","dataAtual","dataNascimentoConvertida","anos","idade"],"mappings":"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","sourcesContent":["export function formataDataBanco(data) {\r\n    //formata data de dd/mm/aaaa para aaaa-mm-dd pra enviar ao banco de dados\r\n    if (typeof data !='undefined')\r\n        return data.substring(6, 10)+'-'+data.substring(3, 5)+'-'+data.substring(0, 2)\r\n}\r\n\r\nexport function formataData(data) {\r\n    //formata data de aaaa-mm-dd para dd/mm/aaaa pra enviar ao banco de dados\r\n    //também faz validação se a data está correta e se não é maior que a data atual\r\n    if (data.length == 2) {\r\n        data = data + '/'\r\n    } else if (data.length == 5) {\r\n        data = data + '/'\r\n    }\r\n    if (data.length > 10) {\r\n        data = data.substring(0, 10)\r\n    }\r\n    if (data.length == 10) {\r\n        //se o dia for maior que 28, verifica se é bissexto\r\n        if (data.substring(0, 2) == 29) {\r\n            if (data.substring(3, 5) == '02') {\r\n                if (data.substring(6, 10) % 4 == 0) {\r\n                    data = '29/02/' + data.substring(6, 10)\r\n                } else {\r\n                    data = '28/02/' + data.substring(6, 10)\r\n                }\r\n            }\r\n        }\r\n        //se o dia for maior que 31, verifica se o mês tem 31 dias\r\n        if (data.substring(0, 2) > 31) {\r\n            if (data.substring(3, 5) == '04' || data.substring(3, 5) == '06' || data.substring(3, 5) == '09' || data.substring(3, 5) == '11') {\r\n                data = '30/' + data.substring(3, 5) + '/' + data.substring(6, 10)\r\n            } else {\r\n                data = '31/' + data.substring(3, 5) + '/' + data.substring(6, 10)\r\n            }\r\n        }\r\n        //se o mês for maior que 12, setar o mês para 12\r\n        if (data.substring(3, 5) > 12) {\r\n            data = data.substring(0, 2) + '/' + '12' + '/' + data.substring(6, 10)\r\n        }\r\n        //se o ano for menor que 1900, setar o ano para 1900\r\n        if (data.length == 10 && Number(data.substring(6, 10)) < 1900) {\r\n            data = data.substring(0, 6)+'1900'\r\n        }\r\n        //se o ano for maior que o atual\r\n        if (data.length == 10 && Number(data.substring(6, 10)) > new Date().getFullYear()) {\r\n            data = data.substring(0, 6) + new Date().getFullYear()\r\n        }\r\n        //pegar timestamp da data\r\n        let timestamp = new Date(formataDataBanco(data)).getTime()\r\n        //pegar timestamp atual\r\n        let timestampAtual = new Date().getTime()\r\n        //verificar se a data é maior que a data atual\r\n        if (timestamp > timestampAtual) {\r\n            //dia atual\r\n            let diaAtual = new Date().getDate()\r\n            //adiciona zero a esquerda\r\n            if (diaAtual < 10) {\r\n                diaAtual = '0' + diaAtual\r\n            }\r\n            //mês atual\r\n            let mesAtual = new Date().getMonth() + 1\r\n            //adiciona zero a esquerda\r\n            if (mesAtual < 10) {\r\n                mesAtual = '0' + mesAtual\r\n            }\r\n            //ano atual\r\n            let anoAtual = new Date().getFullYear()\r\n            //formatar data atual\r\n            data = diaAtual + '/' + mesAtual + '/' + anoAtual\r\n        }\r\n    }\r\n    return data;\r\n}\r\n\r\n\r\nexport function converterDataNascimento(data){\r\n    data.forEach(element => {\r\n        if (element.datanascimento!=='0000-00-00') {\r\n            //formatar datanacimento em dd/mm/aaaa\r\n            console.log(element.datanascimento)\r\n\r\n            let dia = element.datanascimento.split('-')[2];\r\n            let mes = element.datanascimento.split('-')[1];\r\n            let ano = element.datanascimento.split('-')[0];\r\n            element.datanascimento = dia + '/' + mes + '/' + ano;\r\n\r\n            \r\n            let dataNascimento = dia + '/' + mes + '/' + ano;\r\n            let dataAtual = new Date();\r\n            let dataNascimentoConvertida = new Date(dataNascimento);\r\n            let anos = dataAtual.getFullYear() - dataNascimentoConvertida.getFullYear();\r\n            \r\n            element.idade = anos;\r\n\r\n        } else {\r\n            element.datanascimento = 'Desconhecido';\r\n            element.idade = 0;\r\n        }\r\n    });\r\n    return data;\r\n}"]},"metadata":{},"sourceType":"module"}