{"ast":null,"code":"export function formataData(data) {\n  if (data.length == 2) {\n    data = data + '/';\n  } else if (data.length == 5) {\n    data = data + '/';\n  }\n\n  if (data.length > 10) {\n    data = data.substring(0, 10);\n  } //se o dia for maior que 28, verifica se é bissexto\n\n\n  if (data.substring(0, 2) == 29) {\n    if (data.substring(3, 5) == '02') {\n      if (data.substring(6, 10) % 4 == 0) {\n        data = '29/02/' + data.substring(6, 10);\n      } else {\n        data = '28/02/' + data.substring(6, 10);\n      }\n    }\n  } //se o dia for maior que 31, verifica se o mês tem 31 dias\n\n\n  if (data.substring(0, 2) > 31) {\n    if (data.substring(3, 5) == '04' || data.substring(3, 5) == '06' || data.substring(3, 5) == '09' || data.substring(3, 5) == '11') {\n      data = '31/' + data.substring(3, 5) + '/' + data.substring(6, 10);\n    }\n  } //se o mês for maior que 12, setar o mês para 12\n\n\n  if (data.substring(3, 5) > 12) {\n    data = data.substring(0, 2) + '/' + '12' + '/' + data.substring(6, 10);\n  } //se o ano for menor que 1900, setar o ano para 1900\n\n\n  if (data.length == 10 && Number(data.substring(6, 10)) < 1900) {\n    data = data.substring(0, 6) + '1900';\n  } //pegar timestamp da data\n\n\n  let timestamp = new Date(data).getTime(); //pegar timestamp atual\n\n  let timestampAtual = new Date().getTime(); //verificar se a data é maior que a data atual\n\n  if (timestamp > timestampAtual) {\n    //dia atual\n    let diaAtual = new Date().getDate(); //mês atual\n\n    let mesAtual = new Date().getMonth() + 1; //ano atual\n\n    let anoAtual = new Date().getFullYear(); //formatar data atual\n\n    data = diaAtual + '/' + mesAtual + '/' + anoAtual;\n  }\n\n  return data;\n}","map":{"version":3,"sources":["D:/Work/react-crud-test/frontend/src/functions.js"],"names":["formataData","data","length","substring","Number","timestamp","Date","getTime","timestampAtual","diaAtual","getDate","mesAtual","getMonth","anoAtual","getFullYear"],"mappings":"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","sourcesContent":["\r\n\r\n\r\nexport function formataData(data) {\r\n    if (data.length == 2) {\r\n        data = data + '/'\r\n    } else if (data.length == 5) {\r\n        data = data + '/'\r\n    }\r\n    if (data.length > 10) {\r\n        data = data.substring(0, 10)\r\n    }\r\n    //se o dia for maior que 28, verifica se é bissexto\r\n    if (data.substring(0, 2) == 29) {\r\n        if (data.substring(3, 5) == '02') {\r\n            if (data.substring(6, 10) % 4 == 0) {\r\n                data = '29/02/' + data.substring(6, 10)\r\n            } else {\r\n                data = '28/02/' + data.substring(6, 10)\r\n            }\r\n        }\r\n    }\r\n    //se o dia for maior que 31, verifica se o mês tem 31 dias\r\n    if (data.substring(0, 2) > 31) {\r\n        if (data.substring(3, 5) == '04' || data.substring(3, 5) == '06' || data.substring(3, 5) == '09' || data.substring(3, 5) == '11') {\r\n            data = '31/' + data.substring(3, 5) + '/' + data.substring(6, 10)\r\n        }\r\n    }\r\n    //se o mês for maior que 12, setar o mês para 12\r\n    if (data.substring(3, 5) > 12) {\r\n        data = data.substring(0, 2) + '/' + '12' + '/' + data.substring(6, 10)\r\n    }\r\n    //se o ano for menor que 1900, setar o ano para 1900\r\n    if (data.length == 10 && Number(data.substring(6, 10)) < 1900) {\r\n        data = data.substring(0, 6)+'1900'\r\n    }\r\n    //pegar timestamp da data\r\n    let timestamp = new Date(data).getTime()\r\n    //pegar timestamp atual\r\n    let timestampAtual = new Date().getTime()\r\n    //verificar se a data é maior que a data atual\r\n    if (timestamp > timestampAtual) {\r\n        //dia atual\r\n        let diaAtual = new Date().getDate()\r\n        //mês atual\r\n        let mesAtual = new Date().getMonth() + 1\r\n        //ano atual\r\n        let anoAtual = new Date().getFullYear()\r\n        //formatar data atual\r\n        data = diaAtual + '/' + mesAtual + '/' + anoAtual\r\n    }\r\n    return data;\r\n}"]},"metadata":{},"sourceType":"module"}