{"ast":null,"code":"/*!\r\n * serve-static\r\n * Copyright(c) 2010 Sencha Inc.\r\n * Copyright(c) 2011 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar encodeUrl = require('encodeurl');\n\nvar escapeHtml = require('escape-html');\n\nvar parseUrl = require('parseurl');\n\nvar resolve = require('path').resolve;\n\nvar send = require('send');\n\nvar url = require('url');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = serveStatic;\nmodule.exports.mime = send.mime;\n/**\r\n * @param {string} root\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\n\nfunction serveStatic(root, options) {\n  if (!root) {\n    throw new TypeError('root path required');\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string');\n  } // copy options object\n\n\n  var opts = Object.create(options || null); // fall-though\n\n  var fallthrough = opts.fallthrough !== false; // default redirect\n\n  var redirect = opts.redirect !== false; // headers listener\n\n  var setHeaders = opts.setHeaders;\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function');\n  } // setup options for send\n\n\n  opts.maxage = opts.maxage || opts.maxAge || 0;\n  opts.root = resolve(root); // construct directory listener\n\n  var onDirectory = redirect ? createRedirectDirectoryListener() : createNotFoundDirectoryListener();\n  return function serveStatic(req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next();\n      } // method not allowed\n\n\n      res.statusCode = 405;\n      res.setHeader('Allow', 'GET, HEAD');\n      res.setHeader('Content-Length', '0');\n      res.end();\n      return;\n    }\n\n    var forwardError = !fallthrough;\n    var originalUrl = parseUrl.original(req);\n    var path = parseUrl(req).pathname; // make sure redirect occurs at mount\n\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = '';\n    } // create send stream\n\n\n    var stream = send(req, path, opts); // add directory handler\n\n    stream.on('directory', onDirectory); // add headers listener\n\n    if (setHeaders) {\n      stream.on('headers', setHeaders);\n    } // add file listener for fallthrough\n\n\n    if (fallthrough) {\n      stream.on('file', function onFile() {\n        // once file is determined, always forward error\n        forwardError = true;\n      });\n    } // forward errors\n\n\n    stream.on('error', function error(err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err);\n        return;\n      }\n\n      next();\n    }); // pipe\n\n    stream.pipe(res);\n  };\n}\n/**\r\n * Collapse all leading slashes into a single slash\r\n * @private\r\n */\n\n\nfunction collapseLeadingSlashes(str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str.charCodeAt(i) !== 0x2f\n    /* / */\n    ) {\n      break;\n    }\n  }\n\n  return i > 1 ? '/' + str.substr(i) : str;\n}\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\n\n\nfunction createHtmlDocument(title, body) {\n  return '<!DOCTYPE html>\\n' + '<html lang=\"en\">\\n' + '<head>\\n' + '<meta charset=\"utf-8\">\\n' + '<title>' + title + '</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>' + body + '</pre>\\n' + '</body>\\n' + '</html>\\n';\n}\n/**\r\n * Create a directory listener that just 404s.\r\n * @private\r\n */\n\n\nfunction createNotFoundDirectoryListener() {\n  return function notFound() {\n    this.error(404);\n  };\n}\n/**\r\n * Create a directory listener that performs a redirect.\r\n * @private\r\n */\n\n\nfunction createRedirectDirectoryListener() {\n  return function redirect(res) {\n    if (this.hasTrailingSlash()) {\n      this.error(404);\n      return;\n    } // get original URL\n\n\n    var originalUrl = parseUrl.original(this.req); // append trailing slash\n\n    originalUrl.path = null;\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/'); // reformat the URL\n\n    var loc = encodeUrl(url.format(originalUrl));\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' + escapeHtml(loc) + '</a>'); // send redirect response\n\n    res.statusCode = 301;\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8');\n    res.setHeader('Content-Length', Buffer.byteLength(doc));\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n    res.setHeader('Location', loc);\n    res.end(doc);\n  };\n}","map":{"version":3,"sources":["D:/Work/Testes/react-crud-test/frontend/node_modules/serve-static/index.js"],"names":["encodeUrl","require","escapeHtml","parseUrl","resolve","send","url","module","exports","serveStatic","mime","root","options","TypeError","opts","Object","create","fallthrough","redirect","setHeaders","maxage","maxAge","onDirectory","createRedirectDirectoryListener","createNotFoundDirectoryListener","req","res","next","method","statusCode","setHeader","end","forwardError","originalUrl","original","path","pathname","substr","stream","on","onFile","error","err","pipe","collapseLeadingSlashes","str","i","length","charCodeAt","createHtmlDocument","title","body","notFound","hasTrailingSlash","loc","format","doc","Buffer","byteLength"],"mappings":"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","sourcesContent":["/*!\r\n * serve-static\r\n * Copyright(c) 2010 Sencha Inc.\r\n * Copyright(c) 2011 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar parseUrl = require('parseurl')\r\nvar resolve = require('path').resolve\r\nvar send = require('send')\r\nvar url = require('url')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = serveStatic\r\nmodule.exports.mime = send.mime\r\n\r\n/**\r\n * @param {string} root\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction serveStatic (root, options) {\r\n  if (!root) {\r\n    throw new TypeError('root path required')\r\n  }\r\n\r\n  if (typeof root !== 'string') {\r\n    throw new TypeError('root path must be a string')\r\n  }\r\n\r\n  // copy options object\r\n  var opts = Object.create(options || null)\r\n\r\n  // fall-though\r\n  var fallthrough = opts.fallthrough !== false\r\n\r\n  // default redirect\r\n  var redirect = opts.redirect !== false\r\n\r\n  // headers listener\r\n  var setHeaders = opts.setHeaders\r\n\r\n  if (setHeaders && typeof setHeaders !== 'function') {\r\n    throw new TypeError('option setHeaders must be function')\r\n  }\r\n\r\n  // setup options for send\r\n  opts.maxage = opts.maxage || opts.maxAge || 0\r\n  opts.root = resolve(root)\r\n\r\n  // construct directory listener\r\n  var onDirectory = redirect\r\n    ? createRedirectDirectoryListener()\r\n    : createNotFoundDirectoryListener()\r\n\r\n  return function serveStatic (req, res, next) {\r\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\r\n      if (fallthrough) {\r\n        return next()\r\n      }\r\n\r\n      // method not allowed\r\n      res.statusCode = 405\r\n      res.setHeader('Allow', 'GET, HEAD')\r\n      res.setHeader('Content-Length', '0')\r\n      res.end()\r\n      return\r\n    }\r\n\r\n    var forwardError = !fallthrough\r\n    var originalUrl = parseUrl.original(req)\r\n    var path = parseUrl(req).pathname\r\n\r\n    // make sure redirect occurs at mount\r\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\r\n      path = ''\r\n    }\r\n\r\n    // create send stream\r\n    var stream = send(req, path, opts)\r\n\r\n    // add directory handler\r\n    stream.on('directory', onDirectory)\r\n\r\n    // add headers listener\r\n    if (setHeaders) {\r\n      stream.on('headers', setHeaders)\r\n    }\r\n\r\n    // add file listener for fallthrough\r\n    if (fallthrough) {\r\n      stream.on('file', function onFile () {\r\n        // once file is determined, always forward error\r\n        forwardError = true\r\n      })\r\n    }\r\n\r\n    // forward errors\r\n    stream.on('error', function error (err) {\r\n      if (forwardError || !(err.statusCode < 500)) {\r\n        next(err)\r\n        return\r\n      }\r\n\r\n      next()\r\n    })\r\n\r\n    // pipe\r\n    stream.pipe(res)\r\n  }\r\n}\r\n\r\n/**\r\n * Collapse all leading slashes into a single slash\r\n * @private\r\n */\r\nfunction collapseLeadingSlashes (str) {\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\r\n      break\r\n    }\r\n  }\r\n\r\n  return i > 1\r\n    ? '/' + str.substr(i)\r\n    : str\r\n}\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (title, body) {\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>' + title + '</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Create a directory listener that just 404s.\r\n * @private\r\n */\r\n\r\nfunction createNotFoundDirectoryListener () {\r\n  return function notFound () {\r\n    this.error(404)\r\n  }\r\n}\r\n\r\n/**\r\n * Create a directory listener that performs a redirect.\r\n * @private\r\n */\r\n\r\nfunction createRedirectDirectoryListener () {\r\n  return function redirect (res) {\r\n    if (this.hasTrailingSlash()) {\r\n      this.error(404)\r\n      return\r\n    }\r\n\r\n    // get original URL\r\n    var originalUrl = parseUrl.original(this.req)\r\n\r\n    // append trailing slash\r\n    originalUrl.path = null\r\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\r\n\r\n    // reformat the URL\r\n    var loc = encodeUrl(url.format(originalUrl))\r\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\r\n      escapeHtml(loc) + '</a>')\r\n\r\n    // send redirect response\r\n    res.statusCode = 301\r\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n    res.setHeader('Location', loc)\r\n    res.end(doc)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}