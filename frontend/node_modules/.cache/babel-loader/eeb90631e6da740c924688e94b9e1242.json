{"ast":null,"code":"/*!\r\n * destroy\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module dependencies.\r\n * @private\r\n */\n\nvar ReadStream = require('fs').ReadStream;\n\nvar Stream = require('stream');\n/**\r\n * Module exports.\r\n * @public\r\n */\n\n\nmodule.exports = destroy;\n/**\r\n * Destroy a stream.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\n\nfunction destroy(stream) {\n  if (stream instanceof ReadStream) {\n    return destroyReadStream(stream);\n  }\n\n  if (!(stream instanceof Stream)) {\n    return stream;\n  }\n\n  if (typeof stream.destroy === 'function') {\n    stream.destroy();\n  }\n\n  return stream;\n}\n/**\r\n * Destroy a ReadStream.\r\n *\r\n * @param {object} stream\r\n * @private\r\n */\n\n\nfunction destroyReadStream(stream) {\n  stream.destroy();\n\n  if (typeof stream.close === 'function') {\n    // node.js core bug work-around\n    stream.on('open', onOpenClose);\n  }\n\n  return stream;\n}\n/**\r\n * On open handler to close stream.\r\n * @private\r\n */\n\n\nfunction onOpenClose() {\n  if (typeof this.fd === 'number') {\n    // actually close down the fd\n    this.close();\n  }\n}","map":{"version":3,"sources":["D:/Work/Testes/react-crud-test/frontend/node_modules/destroy/index.js"],"names":["ReadStream","require","Stream","module","exports","destroy","stream","destroyReadStream","close","on","onOpenClose","fd"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,IAAD,CAAP,CAAcD,UAA/B;;AACA,IAAIE,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAT,CAAiBC,MAAjB,EAAyB;AACvB,MAAIA,MAAM,YAAYN,UAAtB,EAAkC;AAChC,WAAOO,iBAAiB,CAACD,MAAD,CAAxB;AACD;;AAED,MAAI,EAAEA,MAAM,YAAYJ,MAApB,CAAJ,EAAiC;AAC/B,WAAOI,MAAP;AACD;;AAED,MAAI,OAAOA,MAAM,CAACD,OAAd,KAA0B,UAA9B,EAA0C;AACxCC,IAAAA,MAAM,CAACD,OAAP;AACD;;AAED,SAAOC,MAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASC,iBAAT,CAA2BD,MAA3B,EAAmC;AACjCA,EAAAA,MAAM,CAACD,OAAP;;AAEA,MAAI,OAAOC,MAAM,CAACE,KAAd,KAAwB,UAA5B,EAAwC;AACtC;AACAF,IAAAA,MAAM,CAACG,EAAP,CAAU,MAAV,EAAkBC,WAAlB;AACD;;AAED,SAAOJ,MAAP;AACD;AAED;AACA;AACA;AACA;;;AAEA,SAASI,WAAT,GAAuB;AACrB,MAAI,OAAO,KAAKC,EAAZ,KAAmB,QAAvB,EAAiC;AAC/B;AACA,SAAKH,KAAL;AACD;AACF","sourcesContent":["/*!\r\n * destroy\r\n * Copyright(c) 2014 Jonathan Ong\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar ReadStream = require('fs').ReadStream\r\nvar Stream = require('stream')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = destroy\r\n\r\n/**\r\n * Destroy a stream.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\r\n\r\nfunction destroy(stream) {\r\n  if (stream instanceof ReadStream) {\r\n    return destroyReadStream(stream)\r\n  }\r\n\r\n  if (!(stream instanceof Stream)) {\r\n    return stream\r\n  }\r\n\r\n  if (typeof stream.destroy === 'function') {\r\n    stream.destroy()\r\n  }\r\n\r\n  return stream\r\n}\r\n\r\n/**\r\n * Destroy a ReadStream.\r\n *\r\n * @param {object} stream\r\n * @private\r\n */\r\n\r\nfunction destroyReadStream(stream) {\r\n  stream.destroy()\r\n\r\n  if (typeof stream.close === 'function') {\r\n    // node.js core bug work-around\r\n    stream.on('open', onOpenClose)\r\n  }\r\n\r\n  return stream\r\n}\r\n\r\n/**\r\n * On open handler to close stream.\r\n * @private\r\n */\r\n\r\nfunction onOpenClose() {\r\n  if (typeof this.fd === 'number') {\r\n    // actually close down the fd\r\n    this.close()\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}